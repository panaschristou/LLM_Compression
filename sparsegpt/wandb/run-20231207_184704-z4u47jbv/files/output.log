/scratch/xc1490/projects/hpml/project/sparsegpt/bitsandbytes/cuda_setup/main.py:106: UserWarning:
================================================================================
WARNING: Manual override via BNB_CUDA_VERSION env variable detected!
BNB_CUDA_VERSION=XXX can be used to load a bitsandbytes version that is different from the PyTorch CUDA version.
If this was unintended set the BNB_CUDA_VERSION variable to an empty string: export BNB_CUDA_VERSION=
If you use the manual override make sure the right libcudart.so is in your LD_LIBRARY_PATH
For example by adding the following to your .bashrc: export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:<path_to_cuda_dir/lib64
Loading CUDA version: BNB_CUDA_VERSION=110
================================================================================
  warn((f'\n\n{"="*80}\n'
/scratch/xc1490/projects/hpml/project/sparsegpt/bitsandbytes/cuda_setup/main.py:166: UserWarning: Welcome to bitsandbytes. For bug reports, please run
python -m bitsandbytes
  warn(msg)
/scratch/xc1490/projects/hpml/project/sparsegpt/bitsandbytes/cuda_setup/main.py:166: UserWarning: /usr/local/nvidia/lib:/usr/local/nvidia/lib64:/.singularity.d/libs did not contain ['libcudart.so', 'libcudart.so.11.0', 'libcudart.so.12.0'] as expected! Searching further paths...
  warn(msg)
/scratch/xc1490/projects/hpml/project/sparsegpt/bitsandbytes/cuda_setup/main.py:166: UserWarning: Found duplicate ['libcudart.so', 'libcudart.so.11.0', 'libcudart.so.12.0'] files: {PosixPath('/share/apps/cuda/11.3.1/lib64/libcudart.so.11.0'), PosixPath('/share/apps/cuda/11.3.1/lib64/libcudart.so')}.. We select the PyTorch default libcudart.so, which is {torch.version.cuda},but this might missmatch with the CUDA version that is needed for bitsandbytes.To override this behavior set the BNB_CUDA_VERSION=<version string, e.g. 122> environmental variableFor example, if you want to use the CUDA version 122BNB_CUDA_VERSION=122 python ...OR set the environmental variable in your .bashrc: export BNB_CUDA_VERSION=122In the case of a manual override, make sure you set the LD_LIBRARY_PATH, e.g.export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-11.2
  warn(msg)
Traceback (most recent call last):
  File "/ext3/miniconda3/lib/python3.11/site-packages/transformers/utils/import_utils.py", line 1099, in _get_module
    return importlib.import_module("." + module_name, self.__name__)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/ext3/miniconda3/lib/python3.11/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1147, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 690, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 940, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/ext3/miniconda3/lib/python3.11/site-packages/transformers/models/llama/modeling_llama.py", line 32, in <module>
    from ...modeling_utils import PreTrainedModel
  File "/ext3/miniconda3/lib/python3.11/site-packages/transformers/modeling_utils.py", line 86, in <module>
    from accelerate import dispatch_model, infer_auto_device_map, init_empty_weights
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1147, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 690, in _load_unlocked
  File "/ext3/miniconda3/lib/python3.11/site-packages/wandb/sdk/lib/import_hooks.py", line 182, in _exec_module
    self.loader.exec_module(module)
  File "/ext3/miniconda3/lib/python3.11/site-packages/accelerate/__init__.py", line 3, in <module>
    from .accelerator import Accelerator
  File "/ext3/miniconda3/lib/python3.11/site-packages/accelerate/accelerator.py", line 35, in <module>
    from .checkpointing import load_accelerator_state, load_custom_state, save_accelerator_state, save_custom_state
  File "/ext3/miniconda3/lib/python3.11/site-packages/accelerate/checkpointing.py", line 24, in <module>
    from .utils import (
  File "/ext3/miniconda3/lib/python3.11/site-packages/accelerate/utils/__init__.py", line 131, in <module>
    from .bnb import has_4bit_bnb_layers, load_and_quantize_model
  File "/ext3/miniconda3/lib/python3.11/site-packages/accelerate/utils/bnb.py", line 42, in <module>
    import bitsandbytes as bnb
  File "/scratch/xc1490/projects/hpml/project/sparsegpt/bitsandbytes/__init__.py", line 6, in <module>
    from . import cuda_setup, utils, research
  File "/scratch/xc1490/projects/hpml/project/sparsegpt/bitsandbytes/research/__init__.py", line 1, in <module>
    from . import nn
  File "/scratch/xc1490/projects/hpml/project/sparsegpt/bitsandbytes/research/nn/__init__.py", line 1, in <module>
    from .modules import LinearFP8Mixed, LinearFP8Global
  File "/scratch/xc1490/projects/hpml/project/sparsegpt/bitsandbytes/research/nn/modules.py", line 8, in <module>
    from bitsandbytes.optim import GlobalOptimManager
  File "/scratch/xc1490/projects/hpml/project/sparsegpt/bitsandbytes/optim/__init__.py", line 6, in <module>
    from bitsandbytes.cextension import COMPILED_WITH_CUDA
  File "/scratch/xc1490/projects/hpml/project/sparsegpt/bitsandbytes/cextension.py", line 20, in <module>
    raise RuntimeError('''
RuntimeError:
        CUDA Setup failed despite GPU being available. Please run the following command to get more information:
        python -m bitsandbytes
        Inspect the output of the command and see if you can locate CUDA libraries. You might need to add them
        to your LD_LIBRARY_PATH. If you suspect a bug, please take the information from python -m bitsandbytes
        and open an issue at: https://github.com/TimDettmers/bitsandbytes/issues
The above exception was the direct cause of the following exception:
Traceback (most recent call last):
  File "/scratch/xc1490/projects/hpml/project/sparsegpt/llama.py", line 314, in <module>
    model = get_llama(args.model)
            ^^^^^^^^^^^^^^^^^^^^^
  File "/scratch/xc1490/projects/hpml/project/sparsegpt/llama.py", line 24, in get_llama
    from transformers import LlamaForCausalLM
  File "<frozen importlib._bootstrap>", line 1229, in _handle_fromlist
  File "/ext3/miniconda3/lib/python3.11/site-packages/transformers/utils/import_utils.py", line 1090, in __getattr__
    value = getattr(module, name)
            ^^^^^^^^^^^^^^^^^^^^^
  File "/ext3/miniconda3/lib/python3.11/site-packages/transformers/utils/import_utils.py", line 1089, in __getattr__
    module = self._get_module(self._class_to_module[name])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/ext3/miniconda3/lib/python3.11/site-packages/transformers/utils/import_utils.py", line 1101, in _get_module
    raise RuntimeError(
RuntimeError: Failed to import transformers.models.llama.modeling_llama because of the following error (look up to see its traceback):
        CUDA Setup failed despite GPU being available. Please run the following command to get more information:
        python -m bitsandbytes
        Inspect the output of the command and see if you can locate CUDA libraries. You might need to add them
        to your LD_LIBRARY_PATH. If you suspect a bug, please take the information from python -m bitsandbytes
        and open an issue at: https://github.com/TimDettmers/bitsandbytes/issues
False
===================================BUG REPORT===================================
================================================================================
The following directories listed in your path were found to be non-existent: {PosixPath('/usr/local/nvidia/lib'), PosixPath('/usr/local/nvidia/lib64')}
The following directories listed in your path were found to be non-existent: {PosixPath('/usr/share/zsh/5.5.1/functions')}
The following directories listed in your path were found to be non-existent: {PosixPath('1')}
The following directories listed in your path were found to be non-existent: {PosixPath('/.singularity.d/env/91-environment.sh')}
The following directories listed in your path were found to be non-existent: {PosixPath('1;/share/apps/modulefiles/cuda/11.3.1.lua'), PosixPath('1')}
The following directories listed in your path were found to be non-existent: {PosixPath('America/New_York')}
The following directories listed in your path were found to be non-existent: {PosixPath('/scratch/xc1490/anaconda3/bin'), PosixPath('/opt/slurm/bin'), PosixPath('/scratch/xc1490/anaconda2/bin'), PosixPath('/usr/lpp/mmfs/bin'), PosixPath('/home/xc1490/bin')}
The following directories listed in your path were found to be non-existent: {PosixPath('1;/usr/local/sbin'), PosixPath('1;/scratch/xc1490/apps/julia-1.2.0/bin'), PosixPath('1;/share/apps/utils/vnc'), PosixPath('1'), PosixPath('1;/usr/lpp/mmfs/bin'), PosixPath('1;/usr/sbin'), PosixPath('1;/share/apps/singularity/bin'), PosixPath('1;/home/xc1490/.local/bin'), PosixPath('1;/share/apps/centos/8/bin'), PosixPath('1;/opt/slurm/bin'), PosixPath('1;/scratch/xc1490/anaconda3/bin'), PosixPath('1;/share/apps/local/bin'), PosixPath('1;/usr/local/bin'), PosixPath('1;/scratch/xc1490/anaconda2/bin'), PosixPath('1;/home/xc1490/bin'), PosixPath('1;/home/xc1490/.nvm/versions/node/v16.15.1/bin'), PosixPath('1;/usr/bin')}
The following directories listed in your path were found to be non-existent: {PosixPath('1;/share/apps/cudnn/8.6.0.163-cuda11/lib'), PosixPath('1')}
The following directories listed in your path were found to be non-existent: {PosixPath('cudnn/8.6.0.163-cuda11'), PosixPath('1;cuda/11.3.1'), PosixPath('1')}
The following directories listed in your path were found to be non-existent: {PosixPath('1;/share/apps/cudnn/8.6.0.163-cuda11/include'), PosixPath('1')}
The following directories listed in your path were found to be non-existent: {PosixPath('/archive/xc1490')}
The following directories listed in your path were found to be non-existent: {PosixPath('/usr/local/nvidia/bin')}
The following directories listed in your path were found to be non-existent: {PosixPath('cuda/11.3.1'), PosixPath('cudnn/8.6.0.163-cuda11')}
The following directories listed in your path were found to be non-existent: {PosixPath('/mnt,/share/apps,/vast')}
The following directories listed in your path were found to be non-existent: {PosixPath('/opt/slurm/etc/slurm.conf')}
The following directories listed in your path were found to be non-existent: {PosixPath('1;/share/apps/centos/8/usr/lib'), PosixPath('1;/share/apps/centos/8/lib64'), PosixPath('1'), PosixPath('1;/share/apps/centos/8/usr/lib64'), PosixPath('1;/share/apps/cudnn/8.6.0.163-cuda11/lib'), PosixPath('1;/usr/local/cuda-11.0')}
The following directories listed in your path were found to be non-existent: {PosixPath('() {  eval $($LMOD_DIR/ml_cmd "$@")\n}')}
The following directories listed in your path were found to be non-existent: {PosixPath('() {  ( alias;\n eval ${which_declare} ) | /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot $@\n}')}
DEBUG: Possible options found for libcudart.so: {PosixPath('/share/apps/cuda/11.3.1/lib64/libcudart.so.11.0'), PosixPath('/share/apps/cuda/11.3.1/lib64/libcudart.so')}
CUDA SETUP: PyTorch settings found: CUDA_VERSION=117, Highest Compute Capability: 8.0.
CUDA SETUP: To manually override the PyTorch CUDA version please see:https://github.com/TimDettmers/bitsandbytes/blob/main/how_to_use_nonpytorch_cuda.md
CUDA SETUP: Required library version not found: libbitsandbytes_cuda117.so. Maybe you need to compile it from source?
CUDA SETUP: Defaulting to libbitsandbytes_cpu.so...
================================================ERROR=====================================
CUDA SETUP: CUDA detection failed! Possible reasons:
1. You need to manually override the PyTorch CUDA version. Please see: "https://github.com/TimDettmers/bitsandbytes/blob/main/how_to_use_nonpytorch_cuda.md
2. CUDA driver not installed
3. CUDA not installed
4. You have multiple conflicting CUDA libraries
5. Required library not pre-compiled for this bitsandbytes release!
CUDA SETUP: If you compiled from source, try again with `make CUDA_VERSION=DETECTED_CUDA_VERSION` for example, `make CUDA_VERSION=113`.
CUDA SETUP: The CUDA version for the compile might depend on your conda install. Inspect CUDA version via `conda list | grep cuda`.
================================================================================
CUDA SETUP: Something unexpected happened. Please compile from source:
git clone https://github.com/TimDettmers/bitsandbytes.git
cd bitsandbytes
CUDA_VERSION=117 make cuda11x
python setup.py install
CUDA SETUP: Setup Failed!